package com.freightmate.harbour.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import lombok.*;
import org.hibernate.annotations.ColumnDefault;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import java.time.LocalDateTime;

@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Getter
@Setter
public class Address {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Column(nullable = false)
    @Enumerated(EnumType.STRING)
    private AddressType addressType;

    @JsonIgnore
    @ManyToOne(targetEntity = User.class, fetch = FetchType.LAZY)
    private User customer;

    @Column(name = "customer_id", insertable = false, updatable = false)
    private Long customerId;

    @JsonIgnore
    @ManyToOne(targetEntity = User.class, fetch = FetchType.LAZY)
    private User client;

    @Column(name = "client_id", insertable = false, updatable = false)
    private Long clientId;

    private String referenceId;

    @Column(nullable = false)
    private String companyName;

    @Column(name = "address_line_1", nullable = false)
    private String addressLine1;

    @Column(name = "address_line_2")
    private String addressLine2;

    @Column(nullable = false)
    private String town;

    @Column(nullable = false)
    //@Size(max = 4, min = 3)       // Commented, existing data contains LENGTH(postcode) > 4
    private Integer postcode;

    @Column(nullable = false)
    private static final String country = "Australia";

    @Column(nullable = false)
    private String state;           // State is not using enum due to existing data

    @Column(nullable = false)
    private String contactName;

    private String contactNo;

    private String contactEmail;

    private String notes; // Special Instructions

    @Column(nullable = false)
    @ColumnDefault(value = "false")
    private Boolean isDefault = false;

    private Integer countUsed;

    @Column(nullable = false)
    @ColumnDefault(value = "false")
    Boolean isDeleted = false;
    LocalDateTime deletedAt;

    @CreationTimestamp
    LocalDateTime createdAt;
    @UpdateTimestamp
    LocalDateTime updatedAt;

    // todo Add a updated by column to cover devs/admins/autogenerated updated by logic
    // https://stackoverflow.com/a/42165624 provides a nice example with spring security
    String deletedBy;
    String createdBy;
    String updatedBy;
}
